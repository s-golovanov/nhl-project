apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-nginx
  name: {{ .Release.Name }}-nginx-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-nginx
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9113"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{ .Release.Name }}-nginx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
      containers:
        - name: {{ .Release.Name }}-nginx
          image: {{ .Values.nginximg }}
          imagePullPolicy: Always
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          ports:
          - containerPort: 80
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: {{ .Release.Name }}-nginx-conf
              mountPath: /etc/nginx/conf.d
            - name: {{ .Release.Name }}-nginx-pvc
              mountPath: /static
        - name: {{ .Release.Name }}-exporter
          image: {{ .Values.nginxexporterimg }}
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          ports:
          - containerPort: 9113
          args:
            - -nginx.scrape-uri=http://127.0.0.1:80/stub_status
      volumes:
        - name: {{ .Release.Name }}-nginx-conf
          configMap:
            name: {{ .Release.Name }}-nginx-conf
        - name: {{ .Release.Name }}-nginx-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-nginx-pvc
